import React from 'react';
import { Form, Input, Button, Select, InputNumber, Row, Col, Card, notification } from 'antd';
import { PlusOutlined } from '@ant-design/icons';
import { useNavigate } from 'react-router-dom';
import { createProductApi } from '../util/api';

const { Option } = Select;
const { TextArea } = Input;

interface ProductFormValues {
  name: string;
  description: string;
  price: number;
  category: string;
  image?: string;
  inStock: boolean;
}

const AddProductPage: React.FC = () => {
  const [form] = Form.useForm();
  const navigate = useNavigate();
  const [loading, setLoading] = React.useState(false);

  const categories = ['Electronics', 'Clothing', 'Books', 'Home', 'Sports'];

  const onFinish = async (values: ProductFormValues) => {
    try {
      setLoading(true);
      
      const productData = {
        name: values.name,
        description: values.description,
        price: values.price,
        category: values.category,
        image: values.image || 'https://via.placeholder.com/300x200',
        inStock: values.inStock ?? true
      };

      const response = await createProductApi(productData);

      if (response.EC === 0) {
        notification.success({
          message: 'Th√†nh c√¥ng',
          description: 'S·∫£n ph·∫©m ƒë√£ ƒë∆∞·ª£c t·∫°o th√†nh c√¥ng!'
        });
        
        form.resetFields();
        navigate('/products');
      } else {
        notification.error({
          message: 'L·ªói',
          description: response.EM || 'Kh√¥ng th·ªÉ t·∫°o s·∫£n ph·∫©m'
        });
      }
    } catch (error) {
      console.error('Error creating product:', error);
      notification.error({
        message: 'L·ªói',
        description: 'ƒê√£ x·∫£y ra l·ªói khi t·∫°o s·∫£n ph·∫©m'
      });
    } finally {
      setLoading(false);
    }
  };

  const onFinishFailed = (errorInfo: unknown) => {
    console.log('Failed:', errorInfo);
    notification.error({
      message: 'L·ªói validation',
      description: 'Vui l√≤ng ki·ªÉm tra l·∫°i c√°c tr∆∞·ªùng b·∫Øt bu·ªôc'
    });
  };

  return (
    <div style={{ padding: '20px' }}>
      <Row justify="center">
        <Col xs={24} sm={20} md={16} lg={12} xl={10}>
          <Card title="Th√™m S·∫£n Ph·∫©m M·ªõi" bordered={false}>
            <Form
              form={form}
              name="add-product"
              layout="vertical"
              onFinish={onFinish}
              onFinishFailed={onFinishFailed}
              autoComplete="off"
            >
              <Form.Item
                label="T√™n s·∫£n ph·∫©m"
                name="name"
                rules={[
                  { required: true, message: 'Vui l√≤ng nh·∫≠p t√™n s·∫£n ph·∫©m!' },
                  { min: 3, message: 'T√™n s·∫£n ph·∫©m ph·∫£i c√≥ √≠t nh·∫•t 3 k√Ω t·ª±!' }
                ]}
              >
                <Input placeholder="Nh·∫≠p t√™n s·∫£n ph·∫©m" />
              </Form.Item>

              <Form.Item
                label="M√¥ t·∫£"
                name="description"
                rules={[
                  { required: true, message: 'Vui l√≤ng nh·∫≠p m√¥ t·∫£ s·∫£n ph·∫©m!' },
                  { min: 10, message: 'M√¥ t·∫£ ph·∫£i c√≥ √≠t nh·∫•t 10 k√Ω t·ª±!' }
                ]}
              >
                <TextArea 
                  rows={4} 
                  placeholder="Nh·∫≠p m√¥ t·∫£ chi ti·∫øt v·ªÅ s·∫£n ph·∫©m"
                  showCount
                  maxLength={500}
                />
              </Form.Item>

              <Row gutter={16}>
                <Col span={12}>
                  <Form.Item
                    label="Gi√° (VNƒê)"
                    name="price"
                    rules={[
                      { required: true, message: 'Vui l√≤ng nh·∫≠p gi√° s·∫£n ph·∫©m!' },
                      { type: 'number', min: 1000, message: 'Gi√° ph·∫£i l·ªõn h∆°n 1,000 VNƒê!' }
                    ]}
                  >
                    <InputNumber
                      style={{ width: '100%' }}
                      placeholder="Nh·∫≠p gi√°"
                      min={1000}
                      step={1000}
                      controls={true}
                      addonAfter="VNƒê"
                    />
                  </Form.Item>
                </Col>

                <Col span={12}>
                  <Form.Item
                    label="Danh m·ª•c"
                    name="category"
                    rules={[{ required: true, message: 'Vui l√≤ng ch·ªçn danh m·ª•c!' }]}
                  >
                    <Select placeholder="Ch·ªçn danh m·ª•c">
                      {categories.map(category => (
                        <Option key={category} value={category}>
                          {category}
                        </Option>
                      ))}
                    </Select>
                  </Form.Item>
                </Col>
              </Row>

              <Form.Item
                label="URL h√¨nh ·∫£nh"
                name="image"
                rules={[
                  { type: 'url', message: 'Vui l√≤ng nh·∫≠p URL h·ª£p l·ªá!' }
                ]}
              >
                <Input 
                  placeholder="https://example.com/image.jpg (t√πy ch·ªçn)"
                  addonBefore="üñºÔ∏è"
                />
              </Form.Item>

              <Form.Item
                label="Tr·∫°ng th√°i"
                name="inStock"
                initialValue={true}
                rules={[{ required: true, message: 'Vui l√≤ng ch·ªçn tr·∫°ng th√°i!' }]}
              >
                <Select>
                  <Option value={true}>C√≤n h√†ng</Option>
                  <Option value={false}>H·∫øt h√†ng</Option>
                </Select>
              </Form.Item>

              <Form.Item style={{ marginTop: '30px' }}>
                <Row gutter={16}>
                  <Col span={12}>
                    <Button 
                      type="default" 
                      block 
                      onClick={() => navigate('/products')}
                    >
                      H·ªßy
                    </Button>
                  </Col>
                  <Col span={12}>
                    <Button 
                      type="primary" 
                      htmlType="submit" 
                      loading={loading}
                      block
                      icon={<PlusOutlined />}
                    >
                      Th√™m s·∫£n ph·∫©m
                    </Button>
                  </Col>
                </Row>
              </Form.Item>
            </Form>
          </Card>
        </Col>
      </Row>
    </div>
  );
};

export default AddProductPage;